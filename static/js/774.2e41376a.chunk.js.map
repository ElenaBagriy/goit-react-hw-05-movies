{"version":3,"file":"static/js/774.2e41376a.chunk.js","mappings":"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","sources":["API.js","components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","components/SearchBox/SearchBox.styled.js","components/SearchBox/SearchBox.jsx","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org';\nconst API_KEY = 'a3ea6037e929c907cd6335d101a9b094';\n\nexport async function  fetchTrendMovies() {\n    const response = await axios.get(`/3/trending/movie/day?api_key=${API_KEY}`);\n    return response.data;\n}\n\nexport async function fetchMovieByName(query) {\n    const response = await axios.get(`/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`);\n    return response.data;\n}\n\nexport async function fetchMovieById(id) {\n    const response = await axios.get(`/3/movie/${id}?api_key=${API_KEY}&language=en-US`);\n    return response.data;\n}\n\nexport async function fetchMovieCast(id) {\n    const response = await axios.get(`/3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`);\n    return response.data;\n}\n\nexport async function fetchMovieReviews(id) {\n    const response = await axios.get(`/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`);\n    return response.data;\n}","import styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const Container = styled.div`\n  max-width: 1200px;\n  padding: 20px 16px;\n  margin: 0 auto;\n`;\n\nexport const List = styled.ol`\n  margin-top: 16px;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  list-style: inside;\n  list-style-type: decimal;\n`\n\nexport const ListItem = styled.li`\n  max-width: 400px;\n`\n\nexport const Link = styled(NavLink)`\n  font-size: 16px;\n  padding-left: 8px;\n  color: black;\n  border-radius: 5px;\n\n  &:hover {\n    color: tomato;\n  }\n        \n`","import { useLocation } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport { Container, List, ListItem, Link } from \"./MovieList.styled\";\n\nconst MovieList = ({movies, header}) => {\n  const location = useLocation();\n\n  return (\n    <Container>\n      {header && <h1>{ header}</h1>}\n          <List>\n            {movies.map(({ id, title }) => (\n              <ListItem key={id}>\n                <Link to={`/movies/${id}`} state={{from: location}}>\n                  {title}\n                </Link>\n            </ListItem>\n            ))}\n          </List>\n      </Container>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n  })),\n  header: PropTypes.string,\n};\n\nexport default MovieList;","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  max-width: 1200px;\n  padding: 20px 16px 0;\n  margin: 0 auto;\n`;\n\nexport const Form = styled.form`\nposition: relative;\nwidth: 400px;\n`\n\nexport const Input = styled.input`\n  box-sizing: border-box;\n  width: 280px;\n  height: 30px;\n  padding: 4px;\n  border-radius: 4px;\n  font-size: 16px;\n  outline-color: gray;\n\n  &:focus,\n  &:active {\n    outline-color: tomato;\n  }\n`;\n\nexport const Button = styled.button`\nposition: absolute;\nright: 8px;\n  box-sizing: border-box;\n  width: 100px;\n  height: 30px;\n  background-color: transparent;\n  border-radius: 4px;\n  border: 2px solid tomato;\n\n  &:focus,\n  &:hover {\n    background-color: tomato;\n    color: white;\n  }\n`;","import PropTypes from 'prop-types';\nimport { Button, Container, Form, Input } from \"./SearchBox.styled\";\n\nconst SearchBox = ({ onSubmit }) => {\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const query = event.target.elements.query.value;\n    if (!query) {\n      return alert('Please, enter something')\n    }\n\n    onSubmit(query);\n    event.target.reset();\n  }\n\n  return (\n    <Container>\n      <Form onSubmit={handleSubmit}>\n        <Input\n          name=\"query\"\n          type=\"text\"\n        />\n        <Button type=\"submit\">Search</Button>\n      </Form>\n    </Container>\n    \n  );\n};\n\nSearchBox.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default SearchBox;","import { useSearchParams } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { fetchMovieByName } from '../API';\nimport MovieList from \"components/MovieList/MovieList\";\nimport SearchBox from \"components/SearchBox/SearchBox\";\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n\nuseEffect(() => {\n  const query = searchParams.get('query');\n  \n  if (!query) return;\n\n  async function searchMovies() {\n    try {\n      const { results } = await fetchMovieByName(query);\n      if (results.length === 0) {\n        return alert('No movie with such name')\n      }\n      const moviesToSave = results.map(result => ({ id: result.id, title: result.title }))\n      setMovies(moviesToSave);\n    } catch (error) {\n      return alert('Something went wrong!')\n    }\n  }\n  searchMovies();\n}, [searchParams])\n\n  const onSubmit = (query) => {\n    setSearchParams({ query });\n  }\n  \n  return (\n    <main>\n      <SearchBox onSubmit={onSubmit} />\n      {movies.length !== 0 && <MovieList movies={movies} />}\n    </main>\n  );\n};\n\nexport default Movies;"],"names":["axios","API_KEY","fetchTrendMovies","response","data","fetchMovieByName","query","fetchMovieById","id","fetchMovieCast","fetchMovieReviews","Container","styled","List","ListItem","Link","NavLink","movies","header","location","useLocation","map","title","to","state","from","Form","Input","Button","onSubmit","event","preventDefault","target","elements","value","alert","reset","name","type","useSearchParams","searchParams","setSearchParams","useState","setMovies","useEffect","get","results","length","moviesToSave","result","searchMovies","MovieList"],"sourceRoot":""}